


















Spatial–Temporal Complex Graph Convolution Network for Traffic Flow Prediction - ScienceDirect

















      JavaScript is disabled on your browser.
      Please enable JavaScript to use all the features on this page.
      

Skip to main contentSkip to article
ScienceDirectJournals & BooksHelpSearchMy accountView PDFDownload full issueSearch ScienceDirectOutlineAbstractKeywords1. Introduction2. Related work3. Preliminaries4. Methodology5. Experiments6. ConclusionCRediT authorship contribution statementDeclaration of Competing InterestAcknowledgmentsData availabilityReferencesShow full outlineCited by (36)Figures (16)Show 10 more figuresTables (10)Table 1Table 2Table 3Table 4Table 5Table 6Show all tablesEngineering Applications of Artificial IntelligenceVolume 121, May 2023, 106044Spatial–Temporal Complex Graph Convolution Network for Traffic Flow PredictionAuthor links open overlay panelYinxin Bao a, Jiashuang Huang a, Qinqin Shen b, Yang Cao a b, Weiping Ding a, Zhenquan Shi a, Quan Shi a bShow moreOutlineAdd to MendeleyShareCitehttps://doi.org/10.1016/j.engappai.2023.106044Get rights and contentAbstractTraffic flow prediction remains an ongoing hot topic in the field of Intelligent Transportation System. The state-of-the-art traffic flow prediction models can effectively extract both spatial and temporal features of traffic flow data, but ignore the correlation and external interference between traffic nodes. To this end, this paper proposes a novel method based on Spatial–Temporal Complex Graph Convolution Network (ST-CGCN) for traffic flow prediction. Specifically, we first constructs the distance matrix, the data correlation matrix, and the comfort measurement matrix according to the geographical locations, the historical data record, and the external interference between traffic nodes. Then, these three matrices are fused into a complex correlation matrix by introducing self-learning dynamic weights to improve the joint modeling ability of spatial–temporal features and external factors. Next, a spatial feature extraction module and a temporal feature extraction module are designed to characterize dynamic spatial–temporal features. The spatial feature extraction module consists of a graph convolution operator with a proposed complex correlation matrix and a residual unit. The temporal feature extraction module consists of a 3D convolution operator and a Long Short-Term Memory (LSTM). Experiments constructed on five real-world datasets demonstrate that the new proposed ST-CGCN is more effective than several existing deep learning based traffic flow prediction models. The key source code and data are available at https://github.com/Bounger2/ST-CGCN.Previous article in issueNext article in issueKeywordsTraffic flow predictionSpatial–temporal featuresLSTMGraph convolution3D convolution1. IntroductionThe traffic congestion problem is becoming more severe with a rapid increase in private cars. Alleviating traffic congestion has become one of the urgent problems to be solved in various countries (Zhu et al., 2019, Kashyap et al., 2022, Jiang and Luo, 2022). As an effective tool to alleviate traffic congestion, the intelligent transportation system (ITS) is drawing attention globally (Poonia et al., 2018). Traffic flow prediction is an important part of ITS. Accurate and real-time traffic flow prediction can provide scientific travel guidance and plan for travelers and traffic management departments (Nagy and Simon, 2018). Therefore, it is essential to improve the prediction performance of the traffic flow prediction models (Guo et al., 2019a).Traffic flow data are primarily collected from road sensor nodes and vehicle sat-nav devices. The purpose of traffic flow prediction is to use historical data to predict future traffic flow (Yuan and Li, 2021, Xu and Liu, 2021). Due to the mutual mapping between sensor nodes, the traffic flow is complex and cyclical in the long term but sudden and volatile in the short term. Therefore, reliable traffic flow prediction is a challenging task in the real world (Xie et al., 2020).Traffic flow data has a significant spatial–temporal correlation, which is affected by the historical traffic data of the current and nearby monitoring points (Atluri et al., 2018, Shi et al., 2021). With the development of deep learning methods, a large number of researchers found that the recurrent neural network (RNN) can learn time series features better than the back propagation (BP) neural network (Xia et al., 2022). Since then, the variants of RNN, such as LSTM and gate recurrent unit (GRU), have been widely used to extract temporal features of traffic flow. To extract the spatial features, some researchers have used convolutional neural network (CNN) from the field of computational vision, and found that the combination of LSTM and CNN can effectively learn the spatial–temporal features compared with a single structural model. CNN and its variants mainly make the road network data similar to RGB (red, green and blue) pixel matrix, and each pixel represents the traffic status of a local area (Du et al., 2020). This kind of road network structure is called Euclidean data. However, the road network in the real world is generally irregular and is typical of non-Euclidean data (Bui et al., 2022). CNN and its variants divide the road into multiple locally equivalent networks, and the prediction effect on the traffic characteristics of a single node in the public road network is not satisfactory (Ranjan et al., 2020, Ishida et al., 2019). In the past few years, due to the excellent learning ability of non-Euclidean data, the research of GNN has become a hot spot in traffic flow prediction (Li et al., 2021b, Yu et al., 2020, Roy et al., 2021). The three variants of GNN summarized by Wu et al. (2021), namely graph convolution network (GCN) (Li et al., 2021a), recurrent graph neural network (RecGNN) (Chen et al., 2019), graph autoencoder (GAE) (Ma et al., 2021), are effectively used to predict traffic flow. However, due to the simple data structure of the above three variants, there are still deficiencies in capturing spatial–temporal features (Yin et al., 2021).The GCN extracts traffic flow’s spatial–temporal features by modeling traffic node correlation. The classical GCN uses an adjacency matrix to model the spatial relationship of different nodes. The diagonals in the adjacency matrix are all 0. The remaining elements of the adjacency matrix represent whether any two nodes are directly connected, 1 represents that there is a direct connection, and 0 represents that there is no direct connection. To better reflect the physical distribution between nodes, some researchers use the physical distance between two nodes to replace the adjacency matrix. Although the above two kinds of matrices considering node relationships have been widely used in GCN and its variants, they still have two shortcomings: static node feature extraction and short-term feature extraction. As traffic nodes are distributed in the road network, the data recorded by different nodes have complex logical mapping. When processing complex traffic data, if only adjacency matrix or distance matrix is used to represent the complex relationship, it is easy to lose the dynamic correlation between nodes (Zhang et al., 2022). In addition, traffic nodes are not only interfered by the data of surrounding nodes, but also by external factors, such as weather, holidays and emergencies et al. It is difficult to reflect the interaction between nodes and external factors only using classical adjacency matrix and distance matrix in the prediction model. Finally, most of the existing GCN variants extract spatial–temporal features by superimposing multi-layer 1D convolutions, which is easy to lose long-term temporal features (Li et al., 2019).In recent years, multi graph feature fusion has provided a broader idea for the above problems. Therefore, this paper proposes a novel Spatial–Temporal Complex Graph Convolution Network (ST-CGCN) to extract dynamic node and long-term temporal features effectively. Unlike GCN variants that only use adjacency or distance matrices, this paper first builds a complex correlation matrix to measure the three key features of nodes, namely distance, data correlation and travel comfort measurement. The distance and data correlation matrix are used to extract the correlation between nodes, and the travel comfort measurement matrix is used to reflect the degree of the impact of external factors on travel intention. Then, the dynamic spatial feature is extracted by graph convolution and residual units combined with complex correlation matrix. Compared with 1D convolution, 3D convolution can effectively extract the dynamic changes of data, and the introduction of LSTM can effectively compensate for the loss of long-term time features. Therefore, the long-term temporal feature is extracted by 3D convolution and LSTM. The establishment of dynamic spatial–temporal feature extraction module effectively mines the complex dynamic spatial–temporal correlation between nodes and between node and the external environment. The following major contributions are highlighted.(1) We convert the interference of external factors on nodes into the impact of travel comfort, and establish a comfort measurement matrix. Combining the distance matrix and data correlation matrix, a complex correlation matrix is constructed to reflect the dynamic correlation of nodes.(2) We combine the constructed complex correlation matrix with graph convolution and residual units to extract dynamic spatial features. The 3D convolution operator and LSTM are fused to extract the dynamic temporal features.(3) Experiments on multiple public datasets show that the proposed ST-CGCN outperforms the popular state-of-the-art methods, such as DCRNN, STGCN, STSGCN and ETGCN. The implementation of the ablation experiment further proves the effectiveness of complex correlation matrix in traffic prediction.The rest of the paper is organized as follows: Section 2 introduces the development of traffic flow prediction models. Section 3 defines the traffic graph and the traffic flow prediction problem. Section 4 introduces the construction of complex correlation matrix and the framework of ST-CGCN. Section 5 introduces the implementation process of the experiment and compares it with other models. Section 6 summarizes and prospects the work of the paper.2. Related work2.1. Classic traffic flow predictionTraffic flow prediction is one of the critical components of ITS (Li et al., 2020, Soon et al., 2019, Walraven et al., 2016). Determining how to improve the traffic flow prediction model’s performance is crucial in the research community. The classical traffic flow prediction methods can be divided into model-driven and data-driven methods (Do et al., 2019). The former is also called the parameter method, and its model structure is determined according to mathematical theory. The common model-driven methods include the autoregressive integrated moving average model (ARIMA) (Ding et al., 2018), the Kalman filter model (Wang et al., 2018), the grey model (Shen et al., 2021, Xiao and Duan, 2020), etc. Simple structure and low computational cost are the advantages of model-driven methods, but this also means that such methods cannot effectively extract the laws of complex nonlinear traffic flow (Zheng et al., 2020).Unlike model-driven methods, data-driven methods can effectively extract nonlinear features. Data-driven methods are generally divided into traditional machine learning methods and deep learning methods. The former methods include the support vector machine (SVM) model (Yu et al., 2016), the Bayesian model (Gu et al., 2020), the fuzzy logic system (FLS) (Shirzadeh et al., 2021), the radial basis function (RBF) neural network (Shirzadeh et al., 2015) and the k-nearest neighbor (KNN) model (Cheng et al., 2018). Abdi and Moshiri (2015) analyzed that traditional machine learning methods, such as multi-layer perceptron (MLP), RBF neural network and WaveNet, have higher prediction accuracy in traffic simulation experiments, and proposed that RBF neural network and WaveNet can better avoid local optimization problems than MLP. Ai et al. (2020) combined RBF neural network and FLS, and took weather, holidays and other factors into account in the model input, effectively predicted the road speed and traffic congestion. Traditional machine learning methods have effectively improved the performance of prediction models in real-world datasets. However, there are many high-dimensional and complex data in the real world. Due to the shallow hidden layer, traditional machine learning methods are difficult to effectively extract the features of high-dimensional and complex traffic data (Chen, 2017).With the development of deep learning theory, data-driven methods based on deep learning are gradually established. Lv et al. (2015) proved that deep learning methods can effectively deal with high-dimensional data. However, the above model can only extract part of traffic flow features at a time, and cannot achieve the common extraction of spatial–temporal features.2.2. Traffic flow prediction based on Euclidean dataInspired by the successful application of CNN in computer vision, many scholars have widely used CNN to extract the spatial–temporal features of Euclidean traffic flow. Zhang et al. (2019) established a deep learning framework based on CNN to predict traffic flow and effectively extract spatial–temporal features. Because the ability to extract features from a single model structure is weak, Convolution LSTM (ConvLSTM) (Zheng et al., 2021) was proposed to realize the common extraction of spatial–temporal features. Li et al. (2018) used diffusion graph convolution network and seq2seq to encode spatial–temporal information. To avoid a decline of prediction accuracy with an increase in network depth, He et al. (2016) introduced residual units to capture small changes. Zhang et al. (2018) transformed the urban road network into a Euclidean structure matrix, and combined with convolution operation and residual unit to build a model, which improved the ability of spatial–temporal feature extraction. Guo et al. (2019b) introduced 3D convolution into the model to extract dynamic spatial–temporal features. Bao et al. (2021) considered external interference factors, which effectively improved the model’s prediction accuracy. The above methods effectively improve the prediction performance when processing Euclidean data. Because these methods divide the road network into regular grid structures, most predict in specific areas, and it is not easy to effectively extract the correlation between traffic nodes. Therefore, accurately extracting the interaction between multiple traffic nodes is crucial (Hou et al., 2021).Table 1. Summary of traffic flow prediction methods based on deep learning (part).MethodsRoad structureNode correlation matrixData typeCNN (Ranjan et al., 2020)EuclideanNoneFlowConvLSTM (Zheng et al., 2021)EuclideanNoneFlowST-ResNet (Zhang et al., 2018)EuclideanNoneFlowST-3DNet (Guo et al., 2019b)EuclideanNoneFlowDCRNN (Li et al., 2018)Non-EuclideanDistance matrixFlowSTGCN (Yu et al., 2018)Non-EuclideanDistance matrixSpeedT-GCN (Zhao et al., 2020)Non-EuclideanAdjacency matrixSpeedTGC-LSTM (Cui et al., 2020)Non-EuclideanAdjacency and distance matrixSpeedSTSGCN (Song et al., 2020)Non-EuclideanAdjacency matrixFlowETGCN (Zhang et al., 2021)Non-EuclideanMixed matrixSpeedST-GCN (Wang et al., 2022a)Non-EuclideanAdjacency matrixFlowTraffic-GGNN (Wang et al., 2022b)Non-EuclideanBi-directional adjacency matrixSpeedST-CGCN (the proposed model)Non-EuclideanComplex correlation matrixFlow and speed2.3. Traffic flow prediction based on non-Euclidean dataIn practice, the sensor nodes in the road are not grid distributed, but irregularly distributed in the road network. The distribution of all sensor nodes presents a non-Euclidean structure and generates typical non-Euclidean data. The prediction of non-Euclidean data is more complex than that of Euclidean data. Therefore, determining how to improve the prediction accuracy of non-Euclidean data is very important. To improve the prediction performance of the traffic flow prediction model in non-Euclidean data, GCN is proposed as an essential branch of GNN. Li et al. (2018) used diffusion graph convolution network and seq2seq to encode spatial–temporal information. Yu et al. (2018) proposed spatial–temporal graph convolutional network (STGCN) to effectively avoid the interference caused by the high nonlinearity and complexity. Song et al. (2020) proposed the spatial–temporal synchronous graph convolution network (STSGCN), which better capture the traffic flow heterogeneity based on the work of STGCN. Zhao et al. (2020) used the original GCN to analyze the spatial correlation of urban road networks with the expression of node relationship as adjacency matrix, and then analyzed the temporal correlation with GRU. Cui et al. (2020) transformed the road network topology into graph data to learn the interdependence between sensor nodes by GCN, and combined LSTM learning temporal features to predict the road network flow. However, the above methods are not sufficient for mining node association features. The traditional graph convolution propagation rules depend on the actual topology and do not consider the different degrees of interaction between sensor nodes in the road. Accordingly, Zhang et al. (2021) proposed a similarity-based attention method to fuse multiple graph adjacency matrices, and combined GRU and GCN to effectively extract the spatial–temporal features. To avoid the loss of data in some sensor nodes affecting the prediction accuracy of the model, Wang et al. (2022a) proposed a protocol with adjacent similar algorithm to effectively predict the traffic flow at intersections without historical data. In view of the complex structure of existing models and the low efficiency of spatial–temporal feature fusion, Wang et al. (2022b) proposed a traffic gated graph neural network (traffic-GGNN) for the real-time fusion of spatial–temporal representation modeling, and applied a GRU-based module to explore and aggregate the spatial interactions with the temporal correlations in a real-time fusion way.The traffic flow prediction methods based on deep learning are summarized in Table 1. The traffic flow prediction methods based on Euclidean data ignore the correlation features of nodes. Due to sensor nodes are not independent but interconnected, determining how to address the mutual influence between nodes is very important. Most traffic flow prediction methods based on Euclidean data use adjacency matrix or distance matrix to extract the correlation features of nodes. However, the adjacency and distance matrix focus on the relationship between nodes, ignoring the relationship between nodes and the external environment. Therefore, we propose a novel complex correlation matrix considering node relationships to replace the classical adjacency matrix. Different from the classical adjacency matrix or distance matrix, the complex correlation matrix can effectively extract the features between nodes and between node and the external environment. By establishing distance matrix, data correlation matrix and comfort measurement matrix, and dynamically fusing the three matrices, this paper can effectively improve the ability of the model to extract the associated features, which is conducive to improving the prediction performance of the proposed model in complex traffic environments. Besides, the spatial extraction module based on graph convolution operation and the temporal extraction module based on 3D convolution operator and LSTM effectively extract the dynamic spatial–temporal features of traffic flow.3. PreliminariesThis section introduces the definitions of road graph and research problem respectively, and then discusses the complex correlation of road nodes.Download: Download high-res image (313KB)Download: Download full-size imageFig. 1. Construction of road graph.3.1. Road graphThis paper generates a graph G = (V, A, X) based on the location of sensors on the road and their traffic flow data. Each sensor is regarded as a node, and its relationship is described by G, where V ={v1,v2,…,vm} represents different nodes, m is the number of nodes. A∈Rm×m is the adjacency matrix. X∈Rm×n is the feature set of all nodes, n is the number of features of each node. Xk={xk,1,xk,2,…,xk,n}, Xk is the characteristic of the kth node, k∈[1,n], xk,n is the nth feature of the k-th node, the features can be the traffic flow, speed, or density recorded by the node at a certain instance. The specific structure is shown in Fig. 1.3.2. Problem definitionAfter transforming the original traffic flow data into a graph according to the method in Section 3.1, the traffic flow prediction problem is turned into predicting X(p+Δt) given historical traffic graph data {X(t)|t=0,…,p}, where p is the last recording time of the data, Δt is the predicted time interval.3.3. Complex correlation features of road nodesAs described in Section 1, the traditional method uses the adjacency matrix to describe the relationship between nodes, neglecting the distance factor for mutual influence, correlation, and external interference between nodes. As shown in Fig. 2(a), the linear distance between node A and node B is the closest, but there is no direct connection, so the correlation between the two nodes does not increase even if the distance is short. As shown in Fig. 2(b), there are similar traffic flow changes between node A and node B, so it is essential to analyze the data correlation between the two nodes. As shown in Fig. 2(c), node A has different traffic flow changes in different weather, so it is crucial to analyze the external impact of the traffic environment. Therefore, only using a single adjacency matrix to reflect the relationship between nodes is not conducive to improving the performance of the traffic flow prediction model. Download: Download high-res image (733KB)Download: Download full-size imageFig. 2. Complex correlation features of road nodes.Download: Download high-res image (900KB)Download: Download full-size imageFig. 3. The structure of ST-CGCN.4. MethodologyThis paper proposes a complex correlation matrix to replace the traditional adjacency matrix to represent the complex relationship between different nodes better. First, the basic structure of ST-CGCN is introduced. The structure of ST-CGCN is shown in Fig. 3. To better handle the mapping relationship between different nodes, based on fully mining road location, data correlation and weather data, distance matrix, data correlation matrix and comfort measurement matrix are constructed, respectively. Then, the three matrices are fused to obtain a complex correlation matrix. Moreover, the spatial feature extraction module uses a graph convolution operator and residual element to capture the spatial features. The 3D convolution operator combined with LSTM are used to build the temporal feature extraction module to capture the temporal features. The spatial and temporal features are weighted and fused to yield the prediction outcome.4.1. Construction of complex correlation matrixAccording to the location, data correlation, and weather data of different nodes, a distance matrix, a data correlation matrix, and a comfort measurement matrix are constructed, respectively.(1) Distance matrixThe distance between nodes can directly indicate the correlation of traffic flow, i.e., the longer the distance and the weaker the correlation. At present, the location information of nodes is generally based on GPS data. This paper collects the longitude and latitude data Pointk=(lonk,latk) of each node, and calculate the distance between nodes using the Haversine formula. The Haversine formula is as follows: (1)Hav(dR)=Hav(lati−latj)+cos(lati)cos(latj)Hav(|loni−lonj|)
(2)Hav(θ)=sin2(θ2)=1−cos(θ)2
(3)d=θ×Rwhere R is the radius of the earth, and the average value is 6371 km, d is the distance between the ith node and the jth node. Thus, the linear distance matrix D1 can be calculated.However, the Haversine formula calculates the straight-line distance between nodes, and it is unreasonable to use the straight-line distance to measure the relationship between nodes. Some nodes have no connection but are very close to each other. To avoid the above problems, the traditional adjacency matrix is improved, and the adjacency matrix is changed into reachable matrix D2. As long as there is a connection between different nodes (either directly or indirectly), it indicates a reachable relationship. The reachability relation formula is as follows: (4)D2(i,j)=1N<01NN>0where N is the number of nodes between two nodes, and the reachability matrix D2 of all nodes is calculated in turn.After the calculation, two matrices about the node are obtained, which are the linear distance matrix D1 and the reachability matrix D2. The longer the distance between two nodes, the weaker their correlation. Therefore, the distance matrix AD can be obtained by D2D1.(2) Data correlation matrixThere are some correlations between the traffic flow of different road nodes. How to effectively extract the correlation features between nodes is very important. This paper uses the Pearson correlation coefficient method (Benesty et al., 2009) to calculate the correlation coefficients of different nodes. The Pearson correlation coefficient method is defined as follows: (5)ρx,y=[∑i=1p(xi−x̄)(yi−ȳ)]/[σ(x)σ(y)]where xi and yi is the ith feature of two nodes, respectively. σ(x) and σ(y) are the standard deviation of the selected feature. According to the calculation of the Pearson correlation coefficient index, the correlation between different nodes is obtained. The data correlation matrix AC can be obtained.(3) Comfort measurement matrixTable 2. Comfort value corresponding to different weather.WeatherValue of fcomfortSunshine_fine1Cloudy0.8Overcast_sky0.7Sprinkle0.5Middle_rain0.4Drencher0.3Cyclone0.1Different weather conditions affect people’s travel intentions, so a comfort measurement matrix is established to reflect people’s travel intentions. This paper defines fcomfort(i,j)∈[0,1]. The better the weather in the current environment, the fcomfort will be closer to 1. On the contrary, it will be closer to 0. This paper collects questionnaire data from 100 people, the comfort values of people for different weather are defined as shown in Table 2. The comfort values between all nodes are calculated according to fcomfort(i,j)∈[0,1], and the comfort measurement matrix AO is generated.(4) Complex correlation matrixAs described in Section 4.1, three matrices are constructed to describe the relationship between nodes, namely, distance matrix AD, data correlation matrix AC, and comfort measurement matrix AO. Complex correlation matrix AN is obtained by fusing the above three matrices: (6)AN=((WDAD)‖(WCAC)‖(WOAO))∗WN+bNwhere WD, WC, WO are the learnable weight of the corresponding matrix, respectively. ∥ is the concatenation operator. WN and bN are convolution output weights and bias terms of complex correlation matrix. * denotes the operation of convolution.Download: Download high-res image (437KB)Download: Download full-size imageFig. 4. The structure of the dynamic spatial feature extraction module.4.2. Dynamic spatial feature extraction moduleThis paper uses graph convolution to extract the spatial features to ensure that the proposed model has good prediction performance under the general road network structure. The structure of the dynamic spatial feature extraction module is shown in Fig. 4.The classical GCN uses adjacency matrix A to extract the relationship between different nodes. In Section 4.1, a new relationship matrix AN is obtained. The graph convolution operation is defined as: (7)Xl+1=fAF(Xl,AN)=fAF(D̄−0.5ĀND̄−0.5XlWl)where Xl and Xl+1 are the road eigenvalues before and after the extraction of the graph convolution operator, ĀN=AN+I, D̄=D̄+I, D is the degree matrix of the road network. I is the identity matrix, and fAF is the activation function.After obtaining the spatial features by using the graph convolution operator, to better extract the local small changes of the matrix, this paper introduces the residual element, which is defined as: (8)Rl+1=Rl+F(Rl,Z)where Rl+1 and Rl are the output and input of the residual unit, respectively. Z is the set of learnable parameters in the residual unit. F is the residual mapping. The output activation function of the spatial feature extraction module is set as the ReLU function to obtain the final spatial feature output XS.Download: Download high-res image (411KB)Download: Download full-size imageFig. 5. The structure of the dynamic temporal feature extraction module.4.3. Dynamic temporal feature extraction moduleTraditional GCN uses convolution to extract temporal features, which is easy to lose the dynamic long-term temporal features of traffic data. To effectively improve the extraction of dynamic temporal features of traffic data, this paper introduces 3D convolution operation based on 2D convolution operation. The 3D convolution is defined as: (9)Xt1l+1=fAF(Xt1l∗Wt1l)where Xt1l+1 and Xt1l are the output and input of 3D convolution, respectively. Wt1l is the parameter to be learned.Although 3D convolution effectively improves the dynamic feature extraction ability of time dimension compared with 2D convolution, however, the time dimension cycle of 3D convolution extraction is shorter and lacks effective long term feature extraction ability compared with the time series model. To grasp the important time feature ability, LSTM is introduced as a long-term time dimension feature extraction module to compensate for the deficiency of 3D convolution. The LSTM forward calculation operation is defined as: (10)Xt2l+1=fLSTM(Xt2l,Wt2l)where Xt2l+1 and Xt2l are the output and input of LSTM forward unit, respectively. fLSTM is the LSTM forward calculation process. Wt2l is the parameter to be learned in the LSTM forward calculation process. The output activation function of the time feature extraction module is designed as sigmoid function to obtain the final time feature output XT. The structure of the dynamic temporal feature extraction module is shown in Fig. 5.4.4. Prediction module and convergence analysisThe outputs XS and XT of the spatial and temporal feature extraction modules are weighted and fused, and the operation is defined as: (11)XFusion=fAF(W1∘XS+W2∘XT)where W1 and W2 are the weights to reflect the proportion of spatial features and temporal features, respectively. ∘ denotes the element-wise multiplication. XFusion is the traffic flow prediction result.The proposed ST-CGCN uses mean square error (MSE) to evaluate the errors of true data and predictive data in model training. (12)MSE=(∑i=1p|XReal(i)−XPred(i)|2)/pwhere XReal(i) and XPred(i) are the real value and predictive value of the ith sample, respectively.Depth learning algorithm usually uses gradient descent algorithm or its improved algorithm as the optimizer. Gradient descent algorithm is generally defined as: (13)Wnew=Wold−η∇MSE(Wold)where Wnew and Wold are the weights of the model after training and before training respectively, η is the learning rate, and ∇ is the gradient.The purpose of model training is to minimize the MSE. The main research directions of deep learning methods are network architecture and the optimization function design (Ruder, 2016, LeCun et al., 2015). This paper focuses on finding the optimal network architecture for traffic flow prediction, so the design of optimization function is not considered. Adam is used as the optimizer for the training of the proposed model. The optimizer has been proven to be convergent, ensuring the proposed model’s convergence (Kingma and Ba, 2015).5. Experiments5.1. DatasetsThis paper collects five datasets, including PeMS(03, 04, 07 and 08) (Song et al., 2020) and SZ-taxi (Zhao et al., 2020), to verify the predictive performance of the proposed model. The specific parameters of the datasets are shown in Table 3. Four PeMS datasets are from the California Transportation Agency Performance Measurement System (PeMS), USA. The SZ-taxi dataset is from the information recorded by taxis in Luohu District, Shenzhen, China.To calculate the comfort measurement matrix, the weather conditions in California and Shenzhen need to be known, so this paper uses “https://tianqi.2345.com/” to obtain weather data. After data sorting, traffic data shall be standardized to reduce the impact of different data dimensions. The calculation formula is as follows: (14)Xnor=(Xreal−X̄real)/σ(Xreal)where Xreal and Xnor are the data before and after standardization, respectively. X̄real is the average value of the data, and σ(Xreal) is the standard deviation of the data. Download: Download high-res image (845KB)Download: Download full-size imageFig. 6. Example calculation of complex correlation matrix in PeMS03.Table 3. Information of datasets.TypesPeMS03PeMS04PeMS07PeMS08SZ-taxiLocationIn California, USAIn California, USAIn California, USAIn California, USAIn Shenzhen, ChinaDate9/1/2018-11/30/20181/1/2018-2/28/20185/1/2017-8/31/20177/1/2016-8/31/20161/1/2015–1/31/2015Time interval (min)555515Data typeFlowFlow, speed, occupancyFlowFlow, speed, occupancySpeedNumber of nodes358307883170156Number of intervals26 20816 99228 22417 85629765.2. Example calculation of complex correlation matrixIn this section, some nodes of PeMS03 are taken as an example to introduce the complex correlation matrix’s calculation methods. This paper collects the longitude and latitude data of 10 sensors in VDS from 313344 to 317752, and calculates the distance and its corresponding distance matrix by using the equations in Section 4.2, as shown in Fig. 6(a). Eq. (5) is used to calculate the correlation between different nodes, as shown in Fig. 6(b). According to the position of sensors, the local historical weather data is acquired and converted into comfort measurement value. The weather data statistics and corresponding comfort value of the location of sensor 313344 are shown in Figs. 6(c) and 6(d). In addition, three exciting observations are found. Firstly, as can be seen from Fig. 6(a), the farther the distance between nodes, the weaker the correlation between nodes. Secondly, it can be seen from Fig. 6(b) that the data of adjacent nodes are highly correlated. Thirdly, it can be seen from Fig. 6(c) that different weather will affect people’s comfort. To sum up, it is essential to consider these factors: node distance, data correlation, and external interference.Table 4. Structural parameters of the ST-CGCN.ParameterST-CGCNInput dimension[Batch_size, Number of nodes, 8]Output dimension[Batch_size, Number of nodes, 1]Graph convolution layers1Dimension of 2D Conv kernel[1 × 5, 1 × 3, 1 × 2]Dimension of 3D Conv kernel[1 × 1 × 2, 1 × 1 × 2, 2 × 1 × 2]Dimension of LSTM input/output layer[1 × Number of nodes × 8]Number of residual units8Activation functionSigmoid, ReLU, Tanh5.3. Experimental settings5.3.1. HyperparameterThe ST-CGCN is developed based on the deep learning framework Pytorch GPU. The graphics card is Nvidia 3060 and the CPU is Intel i5-6700K. The Adam optimizer is used to optimize model parameters, and the optimization and evaluation functions are MSE. The training step is set 0.0001, the number of batches is set 10, and the maximum number of iterations is set 500. This paper splits all datasets with a ratio of 7:3 into training sets and test sets, and uses the past 8 consecutive time steps to predict the future 1 consecutive time step for all models to ensure fair test results. Other structural parameters are shown in Table 4.Table 5. Parameter settings.ParameterLSTMCNN, DCRNN, STGCN, STSGCN, ETGCNInput dimension[1,8 × Number of nodes][8, Number of nodes]Output dimension[1,1 × Number of nodes][1, Number of nodes]Training times500500Batch size1010Training step0.00010.0001Time intervalPeMS: 5 min; SZ-taxi: 15 minPeMS: 5 min; SZ-taxi: 15 min5.3.2. Baseline models and state-of-the-art modelsThe method proposed in this paper is compared with the following six models to verify the effectiveness:(1) LSTM (Hochreiter and Schmidhuber, 1997): As an improved RNN, LSTM effectively reduces the problems of gradient disappearance and gradient explosion. LSTM is usually used to extract the temporal features of traffic flow.(2) CNN (Ranjan et al., 2020): A typical model for extracting spatial features of Euclidean data.(3) DCRNN (Li et al., 2018): Diffusion graph convolutional network and seq2seq are introduced into GRU to extract spatial–temporal features.(4) STGCN (Yu et al., 2018): The STGCN model uses graph convolution operation and 1D convolution network to capture spatial correlation and temporal correlation, respectively.(5) STSGCN (Song et al., 2020): The STSGCN model designs a spatial–temporal synchronization modeling mechanism to capture complex local spatial and temporal correlations.(6) ETGCN (Zhang et al., 2021): The Evolution Temporal Graph Convolutional Network (ETGCN) uses similarity-based fusion method and graph convolution network to fuse multiple graph structures to learn spatial correlation.To verify the performance of ST-CGCN on traffic flow prediction, this paper evaluates the proposed model by comparing the results of two classical baseline models and four state-of-the-art models. The six models are LSTM, CNN, DCRNN, STGCN, STSGCN, and ETGCN. DCRNN, STGCN and STSGCN are popular prediction models for extracting spatial–temporal features. ETGCN is an advanced prediction model which improves the adjacency matrix. The above six models are selected as the comparison models to verify the spatial–temporal feature extraction ability of ST-CGCN and the contribution of complex correlation matrix. Specific parameters in all models are set uniformly to make fair comparisons. Parameter settings are shown in Table 5.5.3.3. Evaluating indicatorIn the experiment, this paper uses root mean square error (RMSE), root mean square percentage error (RMSPE), mean absolute error (MAE), and mean absolute percentage error (MAPE) to evaluate the prediction effects of different models scientifically. The above formulas are as follows: (15)RMSE=1p∑i=1p(XReal(i)−XPred(i))2
(16)RMSPE=100%1p∑i=1p(YReal(i)−YPred(i)YReal(i))2
(17)MAE=1p∑i=1p|XReal(i)−XPred(i)|
(18)MAPE=100%p∑i=1p|XReal(i)−XPred(i)XReal(i)|Download: Download high-res image (612KB)Download: Download full-size imageFig. 7. Prediction effect based on the ST-CGCN model.5.4. Experimental results5.4.1. Effectiveness of the ST-CGCN modelThe ST-CGCN model is trained using the five datasets in Section 5.1, and the prediction performance of the proposed model is demonstrated using the test set. Fig. 7 shows the prediction effects of ST-CGCN on a node in the test sets of PeMS03, PeMS04, PeMS07, PeMS08, and SZ-taxi on a random day, respectively. By analyzing the data trend of the PeMS test sets, the traffic flow peaked from 6:00 to 7:00, and then the traffic flow gradually decreased. Between 16:00 and 18:00, the traffic flow of the PeMS datasets will reach another peak. By analyzing the SZ-taxi test set, the change trend of traffic speed is always stable. Fig. 7 shows that the proposed model can fit real-world datasets’ change trends.  This paper shows the loss iteration of the STCGCN model on five training sets (400 times) in Fig. 8 to better analyze the convergence and stability of the proposed model. The loss value of the proposed model tends to be stable and converges after the 35th iteration. The proposed model can fit stable loss values in five datasets and has high stability.Download: Download high-res image (186KB)Download: Download full-size imageFig. 8. Loss iteration of training set.Download: Download high-res image (355KB)Download: Download full-size imageFig. 9. Influence of node distribution on traffic flow.Download: Download high-res image (412KB)Download: Download full-size imageFig. 10. Influence of different weather on traffic flow.To better show the impact of sensor distribution on traffic flow, this paper selects four sensors (3113344, 313438, 313487, and 313512) in PeMS03, and counts the average value of traffic flow of these four sensors for 10 days, as shown in Fig. 9. It can be found from Fig. 9 that the node 313344 is not on the same road with the other three nodes, so the traffic flow of this node has a low correlation with other nodes. Since the distance between node 313438 and node 313512 is closer, the correlation between the two nodes is higher. The proposed complex correlation matrix considers the distance correlation between nodes, and it can be found that the proposed model can reasonably predict the traffic flow of nodes in different geographical locations.In order to reflect the influence of ST-CGCN in different weather, this paper selects sensor 3113344 in PeMS03 to show the prediction effect on a sunny and rainy day. Fig. 10(a) shows the traffic flow of the same sensor in different weather, the trend of traffic flow in different weather during peak hours is obviously different. Fig. 10(b) shows the comparison between the predictive value and the true value under different weather conditions. It can be found that the proposed model has good fitting performance in different weather conditions.5.4.2. Comparison with five classical modelsFive classical models (LSTM, CNN, DCRNN, STGCN, and STSGCN) are implemented according to Section 5.3.2 and trained using the datasets of PeMS and SZ-taxi. The average prediction results of the test set are shown in Table 6. The ST-CGCN proposed by us has a better prediction performance. Compared with the best performance in classical and state-of-the-art models, the prediction accuracy of the proposed model improved by 2.839%, 2.448%, 2.321% and 4.932% with RMSE, RMSPE, MAE, and MAPE as indicators, respectively.To further compare the performance of ST-CGCN with other classical spatial–temporal feature extraction models (CNN, DCRNN, STGCN, and STSGCN), this paper uses the test set of PeMS03 for comparison, and the results are shown in Fig. 11. When the peak hours come (6:00 a.m. to 8:00 a.m.) and the vehicle flow fluctuates violently, compared with other baseline models, ST-CGCN can capture the sudden change of flow faster. Unlike the baseline models, the ST-CGCN model uses the complex correlation matrix to reflect the relationship between nodes and effectively improve prediction accuracy.Table 6. Performance comparison of different models in the test set (Average).Classical modelsLSTMCNNDCRNNSTGCNSTSGCNST-CGCNDatasetsMetricsEmpty CellEmpty CellEmpty CellEmpty CellEmpty CellEmpty CellPeMS03RMSE35.23332.98730.42730.31428.87327.714RMSPE(%)31.50529.0128.18327.95627.52327.257MAE21.13220.72518.23917.48517.37916.655MAPE(%)21.56120.77318.92417.47216.88216.294PeMS04RMSE41.73239.07638.38335.42334.13633.619RMSPE(%)27.76227.21326.74826.21325.44424.893MAE27.16227.07824.92622.72121.01420.787MAPE(%)18.59817.62317.48214.68813.90513.714PeMS07RMSE45.92740.79438.85638.75838.89437.281RMSPE(%)24.20523.56922.84722.18921.49320.633MAE30.02132.14125.76425.38224.76823.491MAPE(%)13.53212.36111.69311.08710.6639.709PeMS08RMSE34.07429.52827.83727.82927.55526.434RMSPE(%)22.53622.08321.17120.91520.70619.969MAE22.37321.85817.86118.03517.88317.837MAPE(%)14.68213.7911.45811.42711.70910.634SZ-taxiRMSE4.9434.9154.8934.8874.864.838RMSPE(%)27.83527.49827.02326.73126.24725.841MAE3.5553.5413.5283.5023.4913.458MAPE(%)21.65120.04819.5719.4319.21118.889  The traffic conditions change with time, this paper evaluates the experimental results in different periods on the PeMS03 dataset to further study the practicability of the proposed method. By analyzing Fig. 11, the traffic flow changes dramatically from 5:00-7:00, 17:00-19:00 and 19:00-21:00. In order to better verify the prediction performance of the proposed model, the average prediction accuracy comparison of the three time periods is shown in Fig. 12. The proposed model has better prediction accuracy and inflection point capture capability.Download: Download high-res image (300KB)Download: Download full-size imageFig. 11. Comparison of one-day prediction curve in the test set of PeMS03.Download: Download high-res image (176KB)Download: Download full-size imageFig. 12. Performance comparison of different methods during different periods on the dataset of PeMS03.Download: Download high-res image (373KB)Download: Download full-size imageFig. 13. Comparison of multiple prediction results (5 min–60 min).In order to improve the long-term time feature capture ability, this paper introduces 3D convolution and LSTM components into the proposed model. The dataset of PeMS03 is used to verify the long-term feature capture ability. RMSE, MAE, and MAPE are used as evaluation indicators. The comparison results with other baseline models are shown in Fig. 13. The prediction interval is from 5 min to 60 min. The experimental results show that compared with other models, our proposed model can always maintain a high prediction accuracy with the increase in prediction interval.Table 7. Comparison with the model considering multi graph adjacency matrix.ModelRMSE in PeMS03RMSE in PeMS07ETGCN28.22938.022ST-CGCN27.71437.2815.4.3. Comparison with the model considering multi graph adjacency matrixThe ETGCN model also can be used to optimize the adjacency matrix. Different from ETGCN, the ST-CGCN model proposed by us effectively integrates the external interference, and effectively captures the dynamic temporal features of the traffic flow by using 3D convolution operation and LSTM. Because some parameters in ETGCN are unclear, in this experiment, the combination of three improved adjacency matrices of ETGCN and GCN is used as a test model. Two datasets (PeMS03 and PeMS07) are used to test the prediction accuracy of the two models, and RMSE is used as the evaluation index. The experimental results in Table 7 show that the proposed model has a better prediction performance. Fig. 14 shows the comparison of prediction effects between ETGCN and ST-CGCN on the dataset of PeMS07.Download: Download high-res image (157KB)Download: Download full-size imageFig. 14. Comparison of prediction effects between ETGCN and ST-CGCN on dataset of PeMS07.5.5. Ablation analysis5.5.1. Parameter analysis of the ST-CGCNThe selection of the network structure parameters has a significant impact on the prediction performance of ST-CGCN. ST-CGCN uses graph convolution operation to extract the features of non-Euclidean data. The dataset of PeMS07 is used to test the prediction performance under different map convolution layers. Figs. 15(a) and 15(b) show the RMSE prediction accuracy and iteration under the three graph convolution layers. It can be found that the prediction accuracy of the model will improve with the increase of the number of graph convolution layers, but the time required for model training will also increase under the same number of iterations. Considering that the prediction accuracy error of the three structures is within 1%, this paper sets the graph convolution layer as 1 to improve the efficiency of the model.Download: Download high-res image (484KB)Download: Download full-size imageFig. 15. Influence of different graph convolution layers.5.5.2. Influence of complex correlation matrixIn Section 4.1, this paper uses the combination of distance matrix AD, data correlation matrix AC, and comfort measurement matrix AO to construct a complex correlation matrix AN. In order to evaluate the influence of different matrices on the prediction results, this paper also constructs different node relationship matrices. In the ST-CGCN-0 model, the complex correlation matrix is the classical adjacency matrix. In the ST-CGCN-1 model, AN obtained by (WDAD)∥(WCAC). In the ST-CGCN-2 model, AN obtained by (WDAD)∥(WOAO). In the ST-CGCN-3 model, AN obtained by (WCAC)
∥
(WOAO). As shown in Table 8, the ST-CGCN model performs best compared with other models, which shows the effectiveness of the complex correlation matrix.In order to verify the scalability of the complex correlation matrix, this paper replaces the adjacency matrix in the STSGCN model with the complex correlation matrix. The improved STSGCN model is defined as STSGCN-C, and the prediction accuracy and running time of the new model in PeMS03 are shown in Table 9. After modifying the adjacency matrix, although the training time of STSGCN-C is 4.32% higher than that of STSGCN, its prediction accuracy is 3.917% higher than that of STSGCN. It can be found that the complex correlation matrix has good scalability. Table 8. Influence of weight of node relationship matrix.Model[WD,WC,WO]RMSE in PeMS03ST-CGCN-0A28.672ST-CGCN-1(WDAD)∥(WCAC)28.401ST-CGCN-2(WDAD)∥(WOAO)28.134ST-CGCN-3(WCAC)∥(WOAO)27.864ST-CGCN(WDAD)∥(WCAC)∥(WOAO)27.714Table 9. Extension of complex correlation matrix on STSGCN.ModelTrain cost of each epoch(s), batch size = 10RMSE in PeMS03STSGCN337.92328.873STSGCN-C352.52227.7425.5.3. Effect of different modules on the performance of ST-CGCNIn this section, this paper mainly tests the effect of different modules on the prediction accuracy of the proposed model. The ST-CGCN-NT model without temporal feature extraction module and the ST-CGCN-NT model without spatial feature extraction module are constructed, respectively. PeMS08 dataset is used as the test object, and RMSPE is used as the evaluation index. The specific prediction accuracy and training time of each round are shown in Fig. 16. The analysis results show that the ST-CGCN-NS model has the shortest training time and the lowest prediction accuracy. The training time of the STCGCN model is 4.51% shorter than that of the STSGCN model, and the accuracy is increased by 3.559%.The existing literature usually uses params and floating point operations (FLOPs) to measure the complexity of deep learning algorithms (Ramachandran et al., 2019). Params correspond to the space complexity and represent the size of the memory occupied. FLOPs correspond to the time complexity, which can be used to measure the algorithm’s computational complexity. The smaller the FLOPs, the smaller the computational complexity required. Params and FLOPs of the four models in Fig. 16 are shown in Table 10. The calculation complexity of the proposed model is lower than that of STSGCN. Download: Download high-res image (215KB)Download: Download full-size imageFig. 16. Effect of different modules on the performance of ST-CGCN.Table 10. Comparison of space and time complexity of models.ModelParams (M)FLOPs (M)RMSPEST-CGCN-NS1.0281.04121.174ST-CGCN-NT0.386138.58420.851STSGCN1.095418.18420.706ST-CGCN1.671139.88119.9695.6. Discussion on comparison results and potential future workIn Section 5.4, this paper selects five real-world datasets to verify the superior performance of ST-CGCN in six models (LSTM Hochreiter and Schmidhuber, 1997, CNN Ranjan et al., 2020, DCRNN Li et al., 2018, STGCN Yu et al., 2018, STSGCN Song et al., 2020, and ETGCN Zhang et al., 2021). The average comparison results are shown in Table 6. Compared with the best performance in classical and state-of-the-art models, the prediction accuracy of the proposed model improved by 2.839%, 2.448%, 2.321% and 4.932% with RMSE, RMSPE, MAE, and MAPE as indicators, respectively. The experimental results show that the proposed model performs well in real-world datasets in different regions.In the literature, LSTM and CNN are often used to extract spatial–temporal features. Due to LSTM focusing on the extraction of temporal features, LSTM is easy to lose the spatial features, resulting in a low prediction accuracy; When CNN processes Euclidean data, it transforms the road network into a regular grid structure. CNN’s prediction accuracy of grid area is high, but the non-Euclidean data is irregular graphics, which makes CNN unable to predict arbitrarily distributed sensor nodes effectively.Different from LSTM and CNN in extracting local features, DCRNN, STGCN and STSGCN can effectively extract the spatial–temporal features by combing multiple components, but they only use adjacency matrix or distance matrix to describe the association features of nodes, which cannot effectively reflect the factors: node distance, data correlation, and external interference. The ETGCN model optimizes the adjacency matrix, but it neglects the interference of external factors. The ST-CGCN model uses a complex correlation matrix to describe the correlation features of sensor nodes, takes distance, data correlation and external interference as essential considerations, uses graph convolution and residual unit to capture the dynamic spatial features, and uses 3D convolution and LSTM to capture the dynamic temporal features. The results in Section 5.4.2 prove that our model has advantages in multi-step long-term prediction (5 min–60 min) and can effectively capture dynamic spatial–temporal features. Fig. 9, Fig. 10 verify the good prediction performance of the ST-CGCN model under different location distributions and weather climates. Fig. 11, Fig. 12 verify that the ST-CGCN model is susceptible to traffic changes in peak hours. Therefore, the proposed model has better prediction performance in a complex traffic environment.In Section 5.5, this paper also conducts ablation experiments on the ST-CGCN model. By analyzing the influence of different layers of graph convolution on the training time, when the number of layers of graph convolution is set to 1, the error can be kept within 1%, and the time cost of training can be reduced. By establishing different complex correlation matrices, when the distance, data correlation, and external factors of nodes are measured, the model’s prediction accuracy is the highest. Through ablation experiments on the spatial and temporal feature extraction modules, when both modules contribute, the time cost of model training is increased by 10.661%, and the prediction accuracy is improved by 5.691%. This paper also extends the complex correlation matrix to the STSGCN model, and the prediction accuracy of the improved STSGCN model has effectively increased by 3.917%, which proves that the complex correlation matrix has good scalability. This paper uses Params and FLOPs to verify the spatial and temporal complexity of the model, respectively. Compared with STSGCN, the proposed model has better prediction performance and lower complexity.There are still some limitations to be considered in this study, although the proposed model has achieved good results in traffic flow prediction in a complex environment. First, different from the traditional method of directly using weather data as external interference, this paper proposes a novel comfort measurement matrix to consider the impact of external interference on traffic flow by analyzing the impact of weather on people’s travel comfort. Due to the difficulty of data collection, only weather data are used to measure external interference. However, there are still many external interference factors in real life, such as points of interest, public opinion, and events. Determining how to fully mine these data and establish quantitative evaluation indicators in the future is very important for the subsequent improvement of the model. Second, due to the use of the combined network architecture, the training cost of the model is high. Fourth, as the number of model parameters based on deep learning far exceeds that of shallow neural networks, it is not easy to prove their properties by mathematical derivation. Most of the existing methods verify the model’s performance through dataset test results, lacking theoretical explanation. In the future, we will consider optimizing the network structure, reducing the number of network nodes with low weight values, and improving the training efficiency of the model. Third, although the proposed network can give accurate numerical solutions, we cannot reasonably explain the causes of the predicted results due to the limitations of the neural network. In the future, relevant mathematical theories will be introduced to improve interpretability.6. ConclusionThis paper proposed a novel ST-CGCN structure to predict traffic flow based on studies on all main prediction methods. The distance matrix, the data correlation matrix, and the comfort measurement matrix were designed to extract the joint contribution of the location, data correlation and external interference between nodes. The spatial feature extraction module was constructed using the graph convolution operator and residual units. The temporal feature extraction module was constructed using 3D convolution operator and LSTM. The establishment of spatial–temporal feature extraction module effectively excavates the complex dynamic spatial–temporal correlation between nodes and between node and the external environment. Five traffic datasets (PeMS03, PeMS04, PeMS07, PeMS08 and SZ-taxi) were adopted to verify the prediction accuracy of the proposed model. The experimental results have verified the advantages of the proposed model compared with many advanced methods based on experiments using real-world traffic datasets. However, the model proposed in this paper has some areas for improvement, such as insufficient measurement of external factors, complex model structure, etc. In the future, we will consider more external interference, optimize the network structure, and introduce optimization theory to improve the accuracy and interpretability of the traffic flow prediction model.CRediT authorship contribution statementYinxin Bao: Methodology, Software, Programming, Writing. Jiashuang Huang: Validation, Supervision. Qinqin Shen: Conceptualization, Reviewing. Yang Cao: Validation, Reviewing. Weiping Ding: Supervision, Reviewing. Zhenquan Shi: Conceptualization, Supervision. Quan Shi: Supervision, Reviewing.Declaration of Competing InterestThe authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.AcknowledgmentsThis work is supported by the National Natural Science Foundation of China (61771265, 62176131, 62102199), the “226” Scientific Research Project of Nantong City (131320633045), the Science and Technology Project of Nantong City (MS22021034, JC2021198), the Postgraduate Research & Practice Innovation Program of Jiangsu Province
 (KYCX22_3341).Recommended articlesData availabilityData will be made available on request.ReferencesAbdi and Moshiri, 2015Abdi J., Moshiri B.Application of temporal difference learning rules in short-term traffic flow predictionExpert Syst., 32 (1) (2015), pp. 49-64, 10.1111/exsy.12055URL: https://onlinelibrary.wiley.com/doi/abs/10.1111/exsy.12055View in ScopusGoogle ScholarAi et al., 2020Ai C., Jia L., Hong M., Zhang C.Short-term road speed forecasting based on hybrid RBF neural network with the aid of fuzzy system-based techniques in urban traffic flowIEEE Access, 8 (2020), pp. 69461-69470, 10.1109/ACCESS.2020.2986278View in ScopusGoogle ScholarAtluri et al., 2018Atluri G., Karpatne A., Kumar V.Spatio-temporal data mining: a survey of problems and methodsIEEE Trans. Intell. Transp. Syst., 20 (1) (2018), pp. 383-398, 10.1145/3161602Google ScholarBao et al., 2021Bao X., Jiang D., Yang X., Wang H.An improved deep belief network for traffic prediction considering weather factorsAlexandria Eng. J., 60 (1) (2021), pp. 413-420, 10.1016/j.aej.2020.09.003View PDFView articleView in ScopusGoogle ScholarBenesty et al., 2009Benesty J., Chen J., Huang Y., Cohen I.Pearson Correlation Coefficient, Vol. 2Springer (2009), pp. 1-4, 10.1007/978-3-642-00296-0_5View in ScopusGoogle ScholarBui et al., 2022Bui K.H.N., Cho J., Yi H.Spatial-temporal graph neural network for traffic forecasting: an overview and open research issuesAppl. Intell., 52 (3) (2022), pp. 2763-2774, 10.1007/s10489-021-02587-wView in ScopusGoogle ScholarChen, 2017Chen D.Research on traffic flow prediction in the big data environment based on the improved RBF neural networkIEEE Trans. Ind. Inform., 13 (4) (2017), pp. 2000-2008, 10.1109/TII.2017.2682855View in ScopusGoogle ScholarChen et al., 2019Chen C., Li K., Teo S.G., Zou X., Wang K., Wang J., Zeng Z.Gated residual recurrent graph neural networks for traffic predictionAAAI(2019), AAAI, Palo Alto, USA (2019), pp. 485-492, 10.1609/aaai.v33i01.3301485View in ScopusGoogle ScholarCheng et al., 2018Cheng S., Lu F., Peng P., Wu S.Short-term traffic forecasting: an adaptive ST-KNN model that considers spatial heterogeneityComput. Environ. Urban Syst., 71 (2018), pp. 186-198, 10.1016/j.compenvurbsys.2018.05.009View PDFView articleView in ScopusGoogle ScholarCui et al., 2020Cui Z., Henrickson K., Ke R., Wang Y.Traffic graph convolutional recurrent neural network: a deep learning framework for network-scale traffic learning and forecastingIEEE Trans. Intell. Transp. Syst., 21 (11) (2020), pp. 4883-4894, 10.1109/TITS.2019.2950416View in ScopusGoogle ScholarDing et al., 2018Ding C., Duan J., Zhang Y., Wu X., Yu G.Using an ARIMA-GARCH modeling approach to improve subway short-term ridership forecasting accounting for dynamic volatilityIEEE Trans. Intell. Transp. Syst., 19 (4) (2018), pp. 1054-1064, 10.1109/TITS.2017.2711046View in ScopusGoogle ScholarDo et al., 2019Do L.N., Taherifar N., Vu H.L.Survey of neural network-based models for short-term traffic state predictionWiley Interdiscip. Rev. Data Min. Knowl. Discov., 9 (1) (2019), pp. 10-34, 10.1002/widm.1285Google ScholarDu et al., 2020Du B., Peng H., Wang S., Bhuiyan M.Z.A., Wang L., Gong Q., Liu L., Li J.Deep irregular convolutional residual LSTM for urban traffic passenger flows predictionIEEE Trans. Intell. Transp. Syst., 21 (3) (2020), pp. 972-985, 10.1109/TITS.2019.2900481View in ScopusGoogle ScholarGu et al., 2020Gu Y., Lu W., Xu X., Qin L., Shao Z., Zhang H.An improved bayesian combination model for short-term traffic prediction with deep learningIEEE Trans. Intell. Transp. Syst., 21 (3) (2020), pp. 1332-1342, 10.1109/TITS.2019.2939290View in ScopusGoogle ScholarGuo et al., 2019aGuo Q., Li L., (Jeff) Ban X.Urban traffic signal control with connected and automated vehicles: a surveyTransp. Res. C, 101 (2019), pp. 313-334, 10.1016/j.trc.2019.01.026View PDFView articleView in ScopusGoogle ScholarGuo et al., 2019bGuo S., Lin Y., Li S., Chen Z., Wan H.Deep spatial–temporal 3D convolutional neural networks for traffic data forecastingIEEE Trans. Intell. Transp. Syst., 20 (10) (2019), pp. 3913-3926, 10.1109/TITS.2019.2906365View in ScopusGoogle ScholarHe et al., 2016He K., Zhang X., Ren S., Sun J.Deep residual learning for image recognitionCVPR(2016), IEEE, Las Vegas,USA (2016), pp. 770-778, 10.1109/CVPR.2016.90Google ScholarHochreiter and Schmidhuber, 1997Hochreiter S., Schmidhuber J.Long short-term memoryNeural Comput., 9 (8) (1997), pp. 1735-1780, 10.1162/neco.1997.9.8.1735View in ScopusGoogle ScholarHou et al., 2021Hou F., Zhang Y., Fu X., Jiao L., Zheng W.The prediction of multistep traffic flow based on AST-GCN-LSTMJ. Adv. Transp., 2021 (2021), pp. 1-10, 10.1155/2021/9513170Google ScholarIshida et al., 2019Ishida S., Terayama K., Kojima R., Takasu K., Okuno Y.Prediction and interpretable visualization of retrosynthetic reactions using graph convolutional networksJ. Chem. Inf. Model., 59 (12) (2019), pp. 5026-5033, 10.1021/acs.jcim.9b00538View in ScopusGoogle ScholarJiang and Luo, 2022Jiang W., Luo J.Graph neural network for traffic forecasting: a surveyExpert Syst. Appl., 207 (2022), pp. 1-28, 10.1016/j.eswa.2022.117921Google ScholarKashyap et al., 2022Kashyap A.A., Raviraj S., Devarakonda A., Nayak K S.R., KV S., Bhat S.J.Traffic flow prediction models-a review of deep learning techniquesCogent Eng., 9 (1) (2022), pp. 1-24, 10.1080/23311916.2021.2010510Google ScholarKingma and Ba, 2015Kingma D.P., Ba J.Adam: a method for stochastic optimizationICLR 2015 (2015), pp. 1-15Google ScholarLeCun et al., 2015LeCun Y., Bengio Y., Hinton G.Deep learningNature, 521 (7553) (2015), pp. 436-444, 10.1038/nature14539View in ScopusGoogle ScholarLi et al., 2021bLi Z., Gong J., Lu C., Yi Y.Interactive behavior prediction for heterogeneous traffic participants in the urban road: a graph-neural-network-based multitask learning frameworkIEEE/ASME Trans. Mechatronics, 26 (3) (2021), pp. 1339-1349, 10.1109/TMECH.2021.3073736View in ScopusGoogle ScholarLi et al., 2020Li L., Sheng X., Du B., Wang Y., Ran B.A deep fusion model based on restricted Boltzmann machines for traffic accident duration predictionEng. Appl. Artif. Intell., 93 (2020), pp. 1-9, 10.1016/j.engappai.2020.103686Google ScholarLi et al., 2021aLi W., Wang X., Zhang Y., Wu Q.Traffic flow prediction over muti-sensor data correlation with graph convolution networkNeurocomputing, 427 (2021), pp. 50-63, 10.1016/j.neucom.2020.11.032View PDFView articleView in ScopusGoogle ScholarLi et al., 2019Li Z., Xiong G., Chen Y., Lv Y., Hu B., Zhu F., Wang F.Y.A hybrid deep learning approach with GCN and LSTM for traffic flow predictionITSC(2019), IEEE, Auckland, New Zealand (2019), pp. 1929-1933, 10.1109/ITSC.2019.8916778View in ScopusGoogle ScholarLi et al., 2018Li, Y., Yu, R., Shahabi, C., Liu, Y., 2018. Diffusion convolutional recurrent neural network: data-driven traffic forecasting. In: ICLR(2018). Vancouver, Canada, pp. 1–16,.Google ScholarLv et al., 2015Lv Y., Duan Y., Kang W., Li Z., Wang F.Y.Traffic flow prediction with big data: a deep learning approachIEEE Trans. Intell. Transp. Syst., 16 (2) (2015), pp. 865-873, 10.1109/TITS.2014.2345663View in ScopusGoogle ScholarMa et al., 2021Ma M., Na S., Wang H.AEGCN: an autoencoder-constrained graph convolutional networkNeurocomputing, 432 (2021), pp. 21-31, 10.1016/j.neucom.2020.12.061View PDFView articleGoogle ScholarNagy and Simon, 2018Nagy A.M., Simon V.Survey on traffic prediction in smart citiesPervasive Mob. Comput., 50 (2018), pp. 148-163, 10.1016/j.pmcj.2018.07.004View PDFView articleView in ScopusGoogle ScholarPoonia et al., 2018Poonia P., Jain V.K., Kumar A.Short term traffic flow prediction methodologies: a reviewMody Univ. Int. J. Comput. Eng. Res., 2 (1) (2018), pp. 37-39View in ScopusGoogle ScholarRamachandran et al., 2019Ramachandran P., Parmar N., Vaswani A., Bello I., Levskaya A., Shlens J.Stand-alone self-attention in vision modelsNeurIPS 2019, Vol. 32 (2019), pp. 1-13CrossrefGoogle ScholarRanjan et al., 2020Ranjan N., Bhandari S., Zhao H.P., Kim H., Khan P.City-wide traffic congestion prediction based on CNN, LSTM and transpose CNNIEEE Access, 8 (2020), pp. 81606-81620, 10.1109/ACCESS.2020.2991462View in ScopusGoogle ScholarRoy et al., 2021Roy A., Roy K.K., Ahsan Ali A., Amin M.A., Rahman A.K.SST-GNN: simplified spatio-temporal traffic forecasting model using graph neural networkLNCS(2021), LNAI, vol. 12714, Springer, Cham, Germany (2021), pp. 90-102, 10.1007/978-3-030-75768-7_8View in ScopusGoogle ScholarRuder, 2016Ruder S.An overview of gradient descent optimization algorithms (2016), pp. 1-14arXiv prepr., arXiv:1609.04747View in ScopusGoogle ScholarShen et al., 2021Shen Q.Q., Cao Y., Yao L.Q., Zhu Z.K.An optimized discrete grey multi-variable convolution model and its applicationsJ. Comput. Appl. Math., 40 (2) (2021), pp. 1-26, 10.1007/s40314-021-01448-zGoogle ScholarShi et al., 2021Shi X., Qi H., Shen Y., Wu G., Yin B.A spatialoral attention approach for traffic predictionIEEE Trans. Intell. Transp. Syst., 22 (8) (2021), pp. 4909-4918, 10.1109/TITS.2020.2983651View in ScopusGoogle ScholarShirzadeh et al., 2015Shirzadeh M., Amirkhani A., Jalali A., Mosavi M.R.An indirect adaptive neural control of a visual-based quadrotor robot for pursuing a moving targetISA Trans., 59 (2015), pp. 290-302View PDFView articleView in ScopusGoogle ScholarShirzadeh et al., 2021Shirzadeh M., Amirkhani A., Tork N., Taghavifar H.Trajectory tracking of a quadrotor using a robust adaptive type-2 fuzzy neural controller optimized by cuckoo algorithmISA Trans., 114 (2021), pp. 171-190View PDFView articleView in ScopusGoogle ScholarSong et al., 2020Song C., Lin Y., Guo S., Wan H.Spatial-temporal synchronous graph convolutional networks: A new framework for spatial-temporal network data forecastingAAAI(2020), AAAI, Palo Alto, USA (2020), pp. 914-921, 10.1609/aaai.v34i01.5438View in ScopusGoogle ScholarSoon et al., 2019Soon K.L., Lim J.M.Y., Parthiban R.Extended pheromone-based short-term traffic forecasting models for vehicular systemsEng. Appl. Artif. Intell., 82 (2019), pp. 60-75, 10.1016/j.engappai.2019.03.017View PDFView articleView in ScopusGoogle ScholarWalraven et al., 2016Walraven E., Spaan M.T., Bakker B.Traffic flow optimization: a reinforcement learning approachEng. Appl. Artif. Intell., 52 (2016), pp. 203-212, 10.1016/j.engappai.2016.01.001View PDFView articleView in ScopusGoogle ScholarWang et al., 2018Wang C., Ran B., Yang H., Zhang J., Qu X.A novel approach to estimate freeway traffic status: parallel computing and improved Kalman filterIEEE Intell. Transp. Syst. Mag., 10 (2) (2018), pp. 180-193, 10.1109/MITS.2018.2806627View in ScopusGoogle ScholarWang et al., 2022aWang H., Zhang R., Cheng X., Yang L.Hierarchical traffic flow prediction based on spatial-temporal graph convolutional networkIEEE Trans. Intell. Transp. Syst., 23 (9) (2022), pp. 16137-16147, 10.1109/TITS.2022.3148105View in ScopusGoogle ScholarWang et al., 2022bWang Y., Zheng J., Du Y., Huang C., Li P.Traffic-GGNN: Predicting traffic flow via attentional spatial-temporal gated graph neural networksIEEE Trans. Intell. Transp. Syst., 23 (10) (2022), pp. 18423-18432, 10.1109/TITS.2022.3168590View in ScopusGoogle ScholarWu et al., 2021Wu Z., Pan S., Chen F., Long G., Zhang C., Yu P.S.A comprehensive survey on graph neural networksIEEE Trans. Neural Netw. Learn. Syst., 32 (1) (2021), pp. 4-24, 10.1109/TNNLS.2020.2978386Google ScholarXia et al., 2022Xia D., Yang N., Jian S., Hu Y., Li H.SW-BiLSTM: a spark-based weighted BiLSTM model for traffic flow forecastingMultimedia Tools Appl., 81 (2022), pp. 23589-23614, 10.1007/s11042-022-12039-3View in ScopusGoogle ScholarXiao and Duan, 2020Xiao X., Duan H.A new grey model for traffic flow mechanicsEng. Appl. Artif. Intell., 88 (2020), pp. 1-12, 10.1016/j.engappai.2019.103350View PDFView articleView in ScopusGoogle ScholarXie et al., 2020Xie P., Li T., Liu J., Du S., Yang X., Zhang J.Urban flow prediction from spatiotemporal data using machine learning: a surveyInf. Fusion, 59 (2020), pp. 1-12, 10.1016/j.inffus.2020.01.002View PDFView articleView in ScopusGoogle ScholarXu and Liu, 2021Xu M., Liu H.A flexible deep learning-aware framework for travel time prediction considering traffic eventEng. Appl. Artif. Intell., 106 (2021), pp. 1-12, 10.1016/j.engappai.2021.104491Google ScholarYin et al., 2021Yin X., Wu G., Wei J., Shen Y., Qi H., Yin B.Multi-stage attention spatial-temporal graph networks for traffic predictionNeurocomputing, 428 (2021), pp. 42-53, 10.1016/j.neucom.2020.11.038View PDFView articleView in ScopusGoogle ScholarYu et al., 2020Yu B., Lee Y., Sohn K.Forecasting road traffic speeds by considering area-wide spatio-temporal dependencies based on a graph convolutional neural network (GCN)Transp. Res. C, 114 (2020), pp. 189-204, 10.1016/j.trc.2020.02.013View PDFView articleView in ScopusGoogle ScholarYu et al., 2016Yu B., Wang Y.T., Yao J.B., Wang J.Y.A comparison of the performance of ANN and SVM for the prediction of traffic accident durationNeural Netw. World, 26 (3) (2016), pp. 271-287, 10.14311/NNW.2016.26.015View in ScopusGoogle ScholarYu et al., 2018Yu B., Yin H., Zhu Z.Spatio-temporal graph convolutional networks: a deep learning framework for traffic forecastingIJCAI(2018), IJCAI, Stockholm, Sweden (2018), pp. 3634-3640, 10.24963/ijcai.2018/505View in ScopusGoogle ScholarYuan and Li, 2021Yuan H., Li G.A survey of traffic prediction: from spatio-temporal data to intelligent transportationData Sci. Eng., 6 (1) (2021), pp. 63-85, 10.1007/s41019-020-00151-zGoogle ScholarZhang et al., 2022Zhang Z., Cui P., Zhu W.Deep learning on graphs: a surveyIEEE Trans. Knowl. Data Eng., 34 (1) (2022), pp. 249-270, 10.1109/TKDE.2020.2981333View in ScopusGoogle ScholarZhang et al., 2021Zhang Z., Li Y., Song H., Dong H.Multiple dynamic graph based traffic speed prediction methodNeurocomputing, 461 (2021), pp. 109-117, 10.1016/j.neucom.2021.07.052View PDFView articleGoogle ScholarZhang et al., 2019Zhang W., Yu Y., Qi Y., Shu F., Wang Y.Short-term traffic flow prediction based on spatio-temporal analysis and CNN deep learningTransp. A Transp. Sci., 15 (2) (2019), pp. 1688-1711, 10.1080/23249935.2019.1637966View articleView in ScopusGoogle ScholarZhang et al., 2018Zhang J., Zheng Y., Qi D., Li R., Yi X., Li T.Predicting citywide crowd flows using deep spatio-temporal residual networksArtificial Intelligence, 259 (2018), pp. 147-166, 10.1016/j.artint.2018.03.002View PDFView articleView in ScopusGoogle ScholarZhao et al., 2020Zhao L., Song Y., Zhang C., Liu Y., Wang P., Lin T., Deng M., Li H.T-GCN: a temporal graph convolutional network for traffic predictionIEEE Trans. Intell. Transp. Syst., 21 (9) (2020), pp. 3848-3858, 10.1109/TITS.2019.2935152View in ScopusGoogle ScholarZheng et al., 2021Zheng H., Lin F., Feng X., Chen Y.A hybrid deep learning model with attention-based conv-LSTM networks for short-term traffic flow predictionIEEE Trans. Intell. Transp. Syst., 22 (11) (2021), pp. 6910-6920, 10.1109/TITS.2020.2997352View in ScopusGoogle ScholarZheng et al., 2020Zheng L., Yang J., Chen L., Sun D., Liu W.Dynamic spatial-temporal feature optimization with ERI big data for short-term traffic flow predictionNeurocomputing, 412 (2020), pp. 339-350, 10.1016/j.neucom.2020.05.038View PDFView articleView in ScopusGoogle ScholarZhu et al., 2019Zhu L., Yu F.R., Wang Y., Ning B., Tang T.Big data analytics in intelligent transportation systems: a surveyIEEE Trans. Intell. Transp. Syst., 20 (1) (2019), pp. 383-398, 10.1109/TITS.2018.2815678Google ScholarCited by (36)A physics-informed graph learning approach for citywide electric vehicle charging demand prediction and pricing2024, Applied EnergyShow abstractA growing number of electric vehicles (EVs) is putting pressure on smart charging services. As a foundation of informing drivers of vacant charging facilities and rationalizing pricing, an effective approach for predicting citywide spatio-temporal EV charging demand that incorporates pricing information is required. Although many deep learning models have been carried out with the orientation of improving prediction accuracy and achieved good results, there is still a lack of prediction models that are economically interpretable and can consider the spillover effect of price adjustments on EV charging demand. To fill the research gaps, we propose a learning approach for accurate EV charging demand prediction and reasonable pricing, named PIAST, which enables the integration of convolutional feature engineering, spatio-temporal dual attention mechanism and physics-informed neural network training. On a dataset containing 18,061 EV charging piles, we demonstrate the state-of-the-art performance of the proposed model. The results empirically showed that the proposed approach achieved an average improvement of 14.78% in accuracy, compared to other representative models. Moreover, the model can uncover the price elasticity of demand during training, making the model interpretable. Finally, price adjustment experiments are conducted to demonstrate the self-influence and spillover effects of price.Deep spatio-temporal 3D dilated dense neural network for traffic flow prediction2024, Expert Systems with ApplicationsShow abstractTraffic flow prediction is increasingly vital for the administration of metropolitan areas. Many research on spatio-temporal networks have been explored but the impacts of both spatial and temporal flexibility, complex spatial correlation has not been considered simultaneously. We present the Spatio-Temporal 3D Multiscale Dilated Dense Network (ST-3DMDDN), a novel 3D Convolutional Neural Network (3DCNN) deep learning neural network for the road level and region level traffic flow prediction. It uses autocorrelation analysis’ early fusion method for importance sampling, a 3D multiscale dilated convolutional network to capture nearby and remote correlations simultaneously, and a densely connected network for deeper feature extraction. Considering traffic flow’s heterogeneity, a new block called the “Spatial and Channel Recalibrate” (SCR) is designed to accurately analyze the correlation contributions. The ST-3DMDDN model is evaluated using three real traffic flows, and the findings indicate that our approach surpasses the performance of the baseline approaches.Short-term traffic flow prediction based on optimized deep learning neural network: PSO-Bi-LSTM2023, Physica A: Statistical Mechanics and its ApplicationsShow abstractTraffic flow prediction is important for urban planning and traffic congestion alleviation as well as for intelligent traffic management systems. Due to the periodic characteristics and high fluctuation in short-term periods, it is difficult to accurately estimate future patterns in traffic flow on the urban road network. Thus, to forecast short-term traffic flow, a PSO-Bi-LSTM model based on the combination of Particle Swarm Optimization (PSO) and Bidirectional-Long Short-Term Memory (Bi-LSTM) neural network is developed in this paper. The PSO approach, which searches for the best parameters of a model on a global scale is used and nonlinear variable inertial weights are considered instead of linear weight. Additionally, the Bi-LSTM network prediction model is optimized using the PSO technique, which has the advantages of rapid convergence, high robustness, and large global search ability. To test the performance of the proposed model, traffic flow data has been collected from the Inner Ring Road, South Extension, Delhi, India. The performance of proposed PSO-Bi-LSTM model has been compared with other existing neural network models, e.g., Bi-LSTM, LSTM, Extreme Learning Machine (ELM), Gated Recurrent Unit (GRU), Wavelet Neural Network (WNN), Multilayer perceptron (MLP), and Autoregressive Integrated Moving Average (ARIMA). Experimental findings demonstrated that the proposed PSO-Bi-LSTM model has significantly outperformed the other models in terms of accuracy and stability.Road section traffic flow prediction method based on the traffic factor state network2023, Physica A: Statistical Mechanics and its ApplicationsShow abstractLarge-scale and diversified traffic data resources strongly support research into estimating urban traffic states and predicting traffic flow. There are many studies on traffic prediction, but there is still not a universally applicable real-world traffic flow prediction method. This paper regards urban road sections as a microscopic traffic system. Based on a deep understanding of the traffic state of road sections, it proposes a pertinent traffic flow prediction framework based on the traffic factor state network (TFSN) framework by combining model-driven methods with machine learning to identify traffic patterns in road sections. For different road traffic patterns, it proves mathematically that the state of traffic flow in each period tends to be the state of the corresponding period with greater probability. According to different road patterns and traffic states, suitable traffic flow modeling and prediction methods were selected. The case shows that this method can improve the accuracy of traffic flow predictions. The research results demonstrate that the average absolute percentage error of traffic flow predictions in urban sections selected with different characteristics and models is reduced by 7.51% compared with the direct prediction error method, verifying the effectiveness and usability of the proposed prediction framework.DyGCN-LSTM: A dynamic GCN-LSTM based encoder-decoder framework for multistep traffic prediction2023, Applied IntelligenceDeep Neural Networks for Spatial-Temporal Cyber-Physical Systems: A Survey2023, Future InternetView all citing articles on ScopusView Abstract© 2023 Elsevier Ltd. All rights reserved.Recommended articlesSpatio-Temporal vehicle traffic flow prediction using multivariate CNN and LSTM modelMaterials Today: Proceedings, Volume 81, Part 2, 2023, pp. 826-833S. Narmadha, V. VijayakumarView PDFUrban regional function guided traffic flow predictionInformation Sciences, Volume 634, 2023, pp. 308-320Kuo Wang, …, Liang LinView PDFST-3DGMR: Spatio-temporal 3D grouped multiscale ResNet network for region-based urban traffic flow predictionInformation Sciences, Volume 624, 2023, pp. 68-93Rui He, …, Yanbing LiuView PDFTemporal attention aware dual-graph convolution network for air traffic flow predictionJournal of Air Transport Management, Volume 106, 2023, Article 102301Kaiquan Cai, …, Yue LiView PDFMultiple Information Spatial–Temporal Attention based Graph Convolution Network for traffic predictionApplied Soft Computing, Volume 136, 2023, Article 110052Shiming Tao, …, Cong LiView PDFBibliometric methods in traffic flow prediction based on artificial intelligenceExpert Systems with Applications, Volume 228, 2023, Article 120421Yong Chen, …, Xiqun Michael ChenView PDFShow 3 more articlesArticle MetricsCitationsCitation Indexes: 35CapturesReaders: 26View detailsAbout ScienceDirectRemote accessShopping cartAdvertiseContact and supportTerms and conditionsPrivacy policyCookies are used by this site.  Cookie SettingsAll content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply.
















Cookie Preference CenterWe use cookies which are necessary to make our site work. We may also use additional cookies to analyse, improve and personalise our content and your digital experience. For more information, see our Cookie Policy and the list of Google Ad-Tech Vendors.


You may choose not to allow some types of cookies. However, blocking some types may impact your experience of our site and the services we are able to offer. See the different category headings below to find out more or change your settings.

Allow all Manage Consent PreferencesStrictly Necessary CookiesAlways activeThese cookies are necessary for the website to function and cannot be switched off in our systems. They are usually only set in response to actions made by you which amount to a request for services, such as setting your privacy preferences, logging in or filling in forms. You can set your browser to block or alert you about these cookies, but some parts of the site will not then work. These cookies do not store any personally identifiable information.
Cookie Details List‎Functional Cookies  Functional Cookies These cookies enable the website to provide enhanced functionality and personalisation. They may be set by us or by third party providers whose services we have added to our pages. If you do not allow these cookies then some or all of these services may not function properly.Cookie Details List‎Performance Cookies  Performance Cookies These cookies allow us to count visits and traffic sources so we can measure and improve the performance of our site. They help us to know which pages are the most and least popular and see how visitors move around the site.Cookie Details List‎Targeting Cookies  Targeting Cookies These cookies may be set through our site by our advertising partners. They may be used by those companies to build a profile of your interests and show you relevant adverts on other sites. If you do not allow these cookies, you will experience less targeted advertising.Cookie Details List‎Back ButtonCookie List Search IconFilter IconClear checkbox label labelApply CancelConsent Leg.Interest checkbox label label checkbox label label checkbox label label Confirm my choicesYour Privacy [`dialog closed`]